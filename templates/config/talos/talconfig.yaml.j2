# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
clusterName: kubernetes

talosVersion: "${talosVersion}"
kubernetesVersion: "${kubernetesVersion}"

endpoint: https://#{ cluster_api_addr }#:6443
additionalApiServerCertSans: &sans
  - "127.0.0.1"
  - "#{ cluster_api_addr }#"
  #% for item in cluster_api_tls_sans %#
  - "#{ item }#"
  #% endfor %#
additionalMachineCertSans: *sans

clusterPodNets: ["#{ cluster_pod_cidr }#"]
clusterSvcNets: ["#{ cluster_svc_cidr }#"]

# Disable built-in CNI to use Cilium
cniConfig:
  name: none

nodes:
  #% for item in nodes %#
  - hostname: "#{ item.name }#"
    ipAddress: "#{ item.address }#"
    #% if item.disk_by_wwid is defined %#
    installDiskSelector:
      wwid: "#{ item.disk_by_wwid }#"
    #% elif item.disk.startswith('/') %#
    installDisk: "#{ item.disk }#"
    #% else %#
    installDiskSelector:
      serial: "#{ item.disk }#"
    #% endif %#
    machineSpec:
      secureboot: #{ (true if item.secureboot else false) | string | lower }#
    talosImageURL: factory.talos.dev/installer#{ "-secureboot" if item.secureboot | default(false, true) }#/#{ item.schematic_id }#
    controlPlane: #{ (item.controller) | string | lower }#
    
    #% if item.bond | default(false, true) %#
    # Bonded interface configuration
    networkInterfaces:
      # Bond interface with either deviceSelectors or direct interface list
      - interface: bond0
        dhcp: false
        #% if node_vlan_tag %#
        vlans:
          - vlanId: #{ node_vlan_tag }#
            addresses:
              - "#{ item.address }#/#{ node_cidr.split('/') | last }#"
            mtu: #{ item.mtu | default(1500, true) }#
            routes:
              - network: "0.0.0.0/0"
                gateway: "#{ node_default_gateway }#"
            #% if item.controller %#
            vip:
              ip: "#{ cluster_api_addr }#"
            #% endif %#
        #% else %#
        addresses:
          - "#{ item.address }#/#{ node_cidr.split('/') | last }#"
        routes:
          - network: "0.0.0.0/0"
            gateway: "#{ node_default_gateway }#"
        mtu: #{ item.mtu | default(1500, true) }#
        #% if item.controller %#
        vip:
          ip: "#{ cluster_api_addr }#"
        #% endif %#
        #% endif %#
        bond:
          mode: #{ item.bond_mode | default('802.3ad', true) }#
          lacpRate: #{ item.bond_lacp_rate | default('fast', true) }#
          xmitHashPolicy: #{ item.bond_xmit_hash_policy | default('layer3+4', true) }#
          miimon: #{ item.bond_miimon | default(100, true) }#
          #% if item.bond_use_selectors | default(false, true) %#
          # Using deviceSelectors for bond members (supports wildcards)
          deviceSelectors:
            #% for intf in item.bond_interfaces | default([], true) %#
            - hardwareAddr: "#{ intf }#"
            #% endfor %#
            #% for pci in item.bond_pci_ids | default([], true) %#
            - busPath: "#{ pci }#"
            #% endfor %#
            #% for driver in item.bond_drivers | default([], true) %#
            - driver: "#{ driver }#"
            #% endfor %#
            #% if item.bond_combined_selectors is defined %#
            #% for selector in item.bond_combined_selectors | default([], true) %#
            #% if loop.first %#
            - #% else %#
            - #% endif %#
              #% for key, value in selector.items() %#
              #{ key }#: "#{ value }#"
              #% endfor %#
            #% endfor %#
            #% endif %#
          #% else %#
          # Using direct interface list (explicit MAC addresses)
          interfaces:
            #% for intf in item.bond_interfaces | default([], true) %#
            - "#{ intf }#"
            #% endfor %#
          #% endif %#
    #% else %#
    # Standard network configuration
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "#{ item.mac_addr | lower }#"
        #% if node_vlan_tag %#
        vlans:
          - vlanId: #{ node_vlan_tag }#
            addresses:
              - "#{ item.address }#/#{ node_cidr.split('/') | last }#"
            mtu: #{ item.mtu | default(1500, true) }#
            routes:
              - network: "0.0.0.0/0"
                gateway: "#{ node_default_gateway }#"
            #% if item.controller %#
            vip:
              ip: "#{ cluster_api_addr }#"
            #% endif %#
        #% else %#
        dhcp: false
        addresses:
          - "#{ item.address }#/#{ node_cidr.split('/') | last }#"
        routes:
          - network: "0.0.0.0/0"
            gateway: "#{ node_default_gateway }#"
        mtu: #{ item.mtu | default(1500, true) }#
        #% if item.controller %#
        vip:
          ip: "#{ cluster_api_addr }#"
        #% endif %#
        #% endif %#
    #% endif %#
    
    #% if talos_patches('%s' % (item.name)) | length == 0 %#
    #% if item.encrypt_disk | default(false, true) %#
    patches:
      - # Encrypt system disk with TPM
        |-
        machine:
          systemDiskEncryption:
            state:
              provider: luks2
              keys:
                - slot: 0
                  tpm: {}
            ephemeral:
              provider: luks2
              keys:
                - slot: 0
                  tpm: {}
    #% endif %#
    #% else %#
    #% for file in talos_patches('%s' % (item.name)) %#
    #% if loop.index == 1 %#
    patches:
    #% if item.encrypt_disk | default(false, true) %#
      - |-
        machine:
          systemDiskEncryption:
            state:
              provider: luks2
              keys:
                - slot: 0
                  tpm: {}
            ephemeral:
              provider: luks2
              keys:
                - slot: 0
                  tpm: {}
    #% endif %#
    #% endif %#
      - "@./patches/#{ item.name }#/#{ file | basename }#"
    #% endfor %#
    #% endif %#
  #% endfor %#

#% for file in talos_patches('global') %#
#% if loop.index == 1 %#
# Global patches
patches:
#% endif %#
  - "@./patches/global/#{ file | basename }#"
#% endfor %#

#% for file in talos_patches('controller') %#
#% if loop.index == 1 %#
# Controller patches
controlPlane:
  patches:
#% endif %#
    - "@./patches/controller/#{ file | basename }#"
#% endfor %#

#% if (nodes | selectattr('controller', 'equalto', False) | list | length) and (talos_patches('worker') | length) %#
#% for file in talos_patches('worker') %#
#% if loop.index == 1 %#
# Worker patches
worker:
  patches:
#% endif %#
    - "@./patches/worker/#{ file | basename }#"
#% endfor %#
#% endif %#